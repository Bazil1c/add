////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

#Область СоздателиТестовыхДанных

// Задать параметры по умолчанию для создания метаданного
// 	Можно добавлять доп.структуру ОбменДанными с Загрузка = Истина
// Необязателен. В классе должен быть реализован или метод Параметры или метод ЗаполнитьПараметры
//
// Параметры:
//  ПараметрыИзСоздателя - Структура	 - параметры, полученные от создателя данных
//  ДопПараметры - Неопределено, Структура	 - доп.параметры для установки
// 
// Возвращаемое значение:
//   Структура - ключ - имя реквизита метаданного, значение - его значения
//
Функция ДополнитьПараметры(Знач ПараметрыИзСоздателя, Знач ДопПараметры = Неопределено) Экспорт
    
    Р = ПараметрыИзСоздателя;
	
	Если Не Р.Свойство("Проведен") Или Не Р.Проведен Тогда
    	Р.Вставить ("ОбменДанными", Новый Структура("Загрузка", Истина));
	КонецЕсли;
    
    Если ЗначениеЗаполнено(ДопПараметры) Тогда
        Для Каждого КлючЗначение Из ДопПараметры Цикл
            Р.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
        КонецЦикла;
    КонецЕсли;

    Возврат Р;

КонецФункции

// Создать нужный элемент, документ, набор записей и т.п.
// Необязателен. В классе должен быть реализован или метод Создать или метод СоздатьПоУмолчанию
//
// Параметры:
//  НовыйЭлемент	 - Произвольный	 -  созданный элемент из создателя данных
//  Параметры	 - Структура	 - 
// 		Может быть вложенная структура ОбменДанными, с ключом Загрузка
// 
// Возвращаемое значение:
//   Произвольный, СправочникОбъект, ДокументОбъект, НаборЗаписей - созданный и записанный элемент
//
Функция Создать(Знач НовыйЭлементИзСоздателя, Знач Параметры = Неопределено) Экспорт
    
	НовыйЭлемент = НовыйЭлементИзСоздателя;

    ЗаполнитьЗначенияСвойств(НовыйЭлемент, Параметры);

    Если Параметры.Свойство("ОбменДанными") И ЕстьСвойство(НовыйЭлемент, "ОбменДанными") Тогда
        ЗаполнитьЗначенияСвойств(НовыйЭлемент.ОбменДанными, Параметры.ОбменДанными);
    КонецЕсли;

    НовыйЭлемент.Записать();

    Возврат НовыйЭлемент;

КонецФункции

#КонецОбласти 

// Универсальная функция для проверки наличия свойств у значения любого типа данных
//
// Параметры:
//   Объект - Любой - Коллекция любого типа, для которой необходимо проверить наличие свойства
//   ИмяСвойства - Строка - имя проверяемого свойства
//
//  Возвращаемое значение:
//   Булево - Истина, если свойство существует
//
Функция ЕстьСвойство(Знач Объект, Знач ИмяСвойства) Экспорт
    НачальноеЗНачение = Новый УникальныйИдентификатор();
    ЗначениеРеквизита = Новый Структура(ИмяСвойства, НачальноеЗНачение);
    ЗаполнитьЗначенияСвойств(ЗначениеРеквизита, Объект);
    Если ЗначениеРеквизита[ИмяСвойства] <> НачальноеЗНачение Тогда
        Возврат Истина;
    КонецЕсли;
    Возврат Ложь;
КонецФункции

// Случайный идентификатор строкой
//
// Параметры:
//  Длина		 - Число	 - Необязательный. По умолчанию 50
//  ТолькоЦифры	 - Булево	 - 
// 
// Возвращаемое значение:
//   Строка - случайная строка заданной длины
//
Функция СлучайныйИдентификаторСтрокой(Длина = 50, ТолькоЦифры = Ложь) Экспорт
	
	Результат = "";

	Пока СтрДлина(Результат) < Длина Цикл
		
		ВремИд = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
		
		Если ТолькоЦифры Тогда			
			ВремИд = ПреобразоватьВЦифры(Лев(ВремИд, Длина));
		КонецЕсли;
		
		Результат = Результат + ВремИд;
		
	КонецЦикла;
	
	Результат = Лев(Результат, Длина);
		
	Возврат Результат;
	
КонецФункции

// Преобразовать в цифры
//
// Параметры:
//  Строка16 - Строка	 - 
// 
// Возвращаемое значение:
//  Строка - 
//
Функция ПреобразоватьВЦифры(Знач Строка16) Экспорт
	
	ЗначениеЧислом = ИзЛюбойВ10(Строка16, 16);
	
	Возврат Формат(Макс(ЗначениеЧислом, - ЗначениеЧислом), "ЧГ=0");
	
КонецФункции

// Из любой в10
//
// Параметры:
//  Значение - 	 - 
//  Нотация	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ИзЛюбойВ10(Знач Значение = "0", Знач Нотация = 36) Экспорт 
	
	// Адаптированная классика: http://my1c-archive.narod.ru/knowhow/uni_conv.html

	Если Нотация <= 0 Тогда 
		Возврат 0; 
	КонецЕсли;
	
	Значение = СокрЛП(Значение);
	
	Если Значение = "0" Тогда 
		Возврат 0; 
	КонецЕсли;
	
	Результат = 0;
	
	Длина = СтрДлина(Значение);
	
	СтрЦифры = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	
	Для Х = 1 По Длина Цикл		
		
		М = Pow(Нотация, Длина - Х);
		
		Результат = Результат + (Найти(СтрЦифры, Сред(Значение, Х, 1)) - 1) * М;
				
	КонецЦикла;
	        
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти